//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Domain
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class supplyEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new supplyEntities object using the connection string found in the 'supplyEntities' section of the application configuration file.
        /// </summary>
        public supplyEntities() : base("name=supplyEntities", "supplyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new supplyEntities object.
        /// </summary>
        public supplyEntities(string connectionString) : base(connectionString, "supplyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new supplyEntities object.
        /// </summary>
        public supplyEntities(EntityConnection connection) : base(connection, "supplyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<item> items
        {
            get
            {
                if ((_items == null))
                {
                    _items = base.CreateObjectSet<item>("items");
                }
                return _items;
            }
        }
        private ObjectSet<item> _items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<itemlookup> itemlookups
        {
            get
            {
                if ((_itemlookups == null))
                {
                    _itemlookups = base.CreateObjectSet<itemlookup>("itemlookups");
                }
                return _itemlookups;
            }
        }
        private ObjectSet<itemlookup> _itemlookups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<location> locations
        {
            get
            {
                if ((_locations == null))
                {
                    _locations = base.CreateObjectSet<location>("locations");
                }
                return _locations;
            }
        }
        private ObjectSet<location> _locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> users
        {
            get
            {
                if ((_users == null))
                {
                    _users = base.CreateObjectSet<user>("users");
                }
                return _users;
            }
        }
        private ObjectSet<user> _users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<usertype> usertypes
        {
            get
            {
                if ((_usertypes == null))
                {
                    _usertypes = base.CreateObjectSet<usertype>("usertypes");
                }
                return _usertypes;
            }
        }
        private ObjectSet<usertype> _usertypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<restockhistory> restockhistories
        {
            get
            {
                if ((_restockhistories == null))
                {
                    _restockhistories = base.CreateObjectSet<restockhistory>("restockhistories");
                }
                return _restockhistories;
            }
        }
        private ObjectSet<restockhistory> _restockhistories;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToitems(item item)
        {
            base.AddObject("items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the itemlookups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToitemlookups(itemlookup itemlookup)
        {
            base.AddObject("itemlookups", itemlookup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolocations(location location)
        {
            base.AddObject("locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousers(user user)
        {
            base.AddObject("users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the usertypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousertypes(usertype usertype)
        {
            base.AddObject("usertypes", usertype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the restockhistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorestockhistories(restockhistory restockhistory)
        {
            base.AddObject("restockhistories", restockhistory);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="supplyModel", Name="item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new item object.
        /// </summary>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="itemPKey">Initial value of the ItemPKey property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="restockPoint">Initial value of the RestockPoint property.</param>
        public static item Createitem(global::System.String description, global::System.String id, global::System.Int64 itemPKey, global::System.Int64 quantity, global::System.String restockPoint)
        {
            item item = new item();
            item.Description = description;
            item.Id = id;
            item.ItemPKey = itemPKey;
            item.Quantity = quantity;
            item.RestockPoint = restockPoint;
            return item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ItemPKey
        {
            get
            {
                return _ItemPKey;
            }
            set
            {
                if (_ItemPKey != value)
                {
                    OnItemPKeyChanging(value);
                    ReportPropertyChanging("ItemPKey");
                    _ItemPKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemPKey");
                    OnItemPKeyChanged();
                }
            }
        }
        private global::System.Int64 _ItemPKey;
        partial void OnItemPKeyChanging(global::System.Int64 value);
        partial void OnItemPKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int64 _Quantity;
        partial void OnQuantityChanging(global::System.Int64 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RestockPoint
        {
            get
            {
                return _RestockPoint;
            }
            set
            {
                OnRestockPointChanging(value);
                ReportPropertyChanging("RestockPoint");
                _RestockPoint = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RestockPoint");
                OnRestockPointChanged();
            }
        }
        private global::System.String _RestockPoint;
        partial void OnRestockPointChanging(global::System.String value);
        partial void OnRestockPointChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="supplyModel", Name="itemlookup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class itemlookup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new itemlookup object.
        /// </summary>
        /// <param name="itemKey">Initial value of the ItemKey property.</param>
        /// <param name="locationKey">Initial value of the LocationKey property.</param>
        /// <param name="lookUpPkey">Initial value of the LookUpPkey property.</param>
        public static itemlookup Createitemlookup(global::System.Int64 itemKey, global::System.Int64 locationKey, global::System.Int64 lookUpPkey)
        {
            itemlookup itemlookup = new itemlookup();
            itemlookup.ItemKey = itemKey;
            itemlookup.LocationKey = locationKey;
            itemlookup.LookUpPkey = lookUpPkey;
            return itemlookup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ItemKey
        {
            get
            {
                return _ItemKey;
            }
            set
            {
                OnItemKeyChanging(value);
                ReportPropertyChanging("ItemKey");
                _ItemKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemKey");
                OnItemKeyChanged();
            }
        }
        private global::System.Int64 _ItemKey;
        partial void OnItemKeyChanging(global::System.Int64 value);
        partial void OnItemKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LocationKey
        {
            get
            {
                return _LocationKey;
            }
            set
            {
                OnLocationKeyChanging(value);
                ReportPropertyChanging("LocationKey");
                _LocationKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationKey");
                OnLocationKeyChanged();
            }
        }
        private global::System.Int64 _LocationKey;
        partial void OnLocationKeyChanging(global::System.Int64 value);
        partial void OnLocationKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LookUpPkey
        {
            get
            {
                return _LookUpPkey;
            }
            set
            {
                if (_LookUpPkey != value)
                {
                    OnLookUpPkeyChanging(value);
                    ReportPropertyChanging("LookUpPkey");
                    _LookUpPkey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LookUpPkey");
                    OnLookUpPkeyChanged();
                }
            }
        }
        private global::System.Int64 _LookUpPkey;
        partial void OnLookUpPkeyChanging(global::System.Int64 value);
        partial void OnLookUpPkeyChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="supplyModel", Name="location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new location object.
        /// </summary>
        /// <param name="locationPKey">Initial value of the LocationPKey property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static location Createlocation(global::System.Int64 locationPKey, global::System.String name)
        {
            location location = new location();
            location.LocationPKey = locationPKey;
            location.Name = name;
            return location;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LocationPKey
        {
            get
            {
                return _LocationPKey;
            }
            set
            {
                if (_LocationPKey != value)
                {
                    OnLocationPKeyChanging(value);
                    ReportPropertyChanging("LocationPKey");
                    _LocationPKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationPKey");
                    OnLocationPKeyChanged();
                }
            }
        }
        private global::System.Int64 _LocationPKey;
        partial void OnLocationPKeyChanging(global::System.Int64 value);
        partial void OnLocationPKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="supplyModel", Name="restockhistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class restockhistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new restockhistory object.
        /// </summary>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="pointName">Initial value of the PointName property.</param>
        /// <param name="stockDate">Initial value of the StockDate property.</param>
        /// <param name="userKey">Initial value of the UserKey property.</param>
        public static restockhistory Createrestockhistory(global::System.Int64 key, global::System.String pointName, global::System.DateTime stockDate, global::System.Int64 userKey)
        {
            restockhistory restockhistory = new restockhistory();
            restockhistory.Key = key;
            restockhistory.PointName = pointName;
            restockhistory.StockDate = stockDate;
            restockhistory.UserKey = userKey;
            return restockhistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Key
        {
            get
            {
                return _Key;
            }
            set
            {
                if (_Key != value)
                {
                    OnKeyChanging(value);
                    ReportPropertyChanging("Key");
                    _Key = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Key");
                    OnKeyChanged();
                }
            }
        }
        private global::System.Int64 _Key;
        partial void OnKeyChanging(global::System.Int64 value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PointName
        {
            get
            {
                return _PointName;
            }
            set
            {
                OnPointNameChanging(value);
                ReportPropertyChanging("PointName");
                _PointName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PointName");
                OnPointNameChanged();
            }
        }
        private global::System.String _PointName;
        partial void OnPointNameChanging(global::System.String value);
        partial void OnPointNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StockDate
        {
            get
            {
                return _StockDate;
            }
            set
            {
                OnStockDateChanging(value);
                ReportPropertyChanging("StockDate");
                _StockDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StockDate");
                OnStockDateChanged();
            }
        }
        private global::System.DateTime _StockDate;
        partial void OnStockDateChanging(global::System.DateTime value);
        partial void OnStockDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserKey
        {
            get
            {
                return _UserKey;
            }
            set
            {
                OnUserKeyChanging(value);
                ReportPropertyChanging("UserKey");
                _UserKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserKey");
                OnUserKeyChanged();
            }
        }
        private global::System.Int64 _UserKey;
        partial void OnUserKeyChanging(global::System.Int64 value);
        partial void OnUserKeyChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="supplyModel", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="pKey">Initial value of the PKey property.</param>
        /// <param name="userType">Initial value of the UserType property.</param>
        /// <param name="needsReset">Initial value of the NeedsReset property.</param>
        public static user Createuser(global::System.String id, global::System.String name, global::System.Int64 pKey, global::System.Int64 userType, global::System.Boolean needsReset)
        {
            user user = new user();
            user.Id = id;
            user.Name = name;
            user.PKey = pKey;
            user.UserType = userType;
            user.NeedsReset = needsReset;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PKey
        {
            get
            {
                return _PKey;
            }
            set
            {
                if (_PKey != value)
                {
                    OnPKeyChanging(value);
                    ReportPropertyChanging("PKey");
                    _PKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PKey");
                    OnPKeyChanged();
                }
            }
        }
        private global::System.Int64 _PKey;
        partial void OnPKeyChanging(global::System.Int64 value);
        partial void OnPKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserType
        {
            get
            {
                return _UserType;
            }
            set
            {
                OnUserTypeChanging(value);
                ReportPropertyChanging("UserType");
                _UserType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserType");
                OnUserTypeChanged();
            }
        }
        private global::System.Int64 _UserType;
        partial void OnUserTypeChanging(global::System.Int64 value);
        partial void OnUserTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NeedsReset
        {
            get
            {
                return _NeedsReset;
            }
            set
            {
                OnNeedsResetChanging(value);
                ReportPropertyChanging("NeedsReset");
                _NeedsReset = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeedsReset");
                OnNeedsResetChanged();
            }
        }
        private global::System.Boolean _NeedsReset;
        partial void OnNeedsResetChanging(global::System.Boolean value);
        partial void OnNeedsResetChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="supplyModel", Name="usertype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class usertype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usertype object.
        /// </summary>
        /// <param name="display">Initial value of the Display property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="pKey">Initial value of the PKey property.</param>
        public static usertype Createusertype(global::System.String display, global::System.Int64 key, global::System.Int64 pKey)
        {
            usertype usertype = new usertype();
            usertype.Display = display;
            usertype.Key = key;
            usertype.PKey = pKey;
            return usertype;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Display
        {
            get
            {
                return _Display;
            }
            set
            {
                OnDisplayChanging(value);
                ReportPropertyChanging("Display");
                _Display = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Display");
                OnDisplayChanged();
            }
        }
        private global::System.String _Display;
        partial void OnDisplayChanging(global::System.String value);
        partial void OnDisplayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.Int64 _Key;
        partial void OnKeyChanging(global::System.Int64 value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PKey
        {
            get
            {
                return _PKey;
            }
            set
            {
                if (_PKey != value)
                {
                    OnPKeyChanging(value);
                    ReportPropertyChanging("PKey");
                    _PKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PKey");
                    OnPKeyChanged();
                }
            }
        }
        private global::System.Int64 _PKey;
        partial void OnPKeyChanging(global::System.Int64 value);
        partial void OnPKeyChanged();

        #endregion
    
    }

    #endregion
    
}
